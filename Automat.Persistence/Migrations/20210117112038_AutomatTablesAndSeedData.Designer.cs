// <auto-generated />
using System;
using Automat.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Automat.Persistence.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20210117112038_AutomatTablesAndSeedData")]
    partial class AutomatTablesAndSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Automat.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryType");

                    b.Property<DateTime>("InsertDate");

                    b.Property<int?>("InsertUserId");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = 1, CategoryType = 0, InsertDate = new DateTime(2021, 1, 17, 14, 20, 37, 692, DateTimeKind.Local), InsertUserId = 1, Name = "İçecek" },
                        new { Id = 2, CategoryType = 2, InsertDate = new DateTime(2021, 1, 17, 14, 20, 37, 694, DateTimeKind.Local), InsertUserId = 1, Name = "Yiyecek" },
                        new { Id = 3, CategoryType = 1, InsertDate = new DateTime(2021, 1, 17, 14, 20, 37, 694, DateTimeKind.Local), InsertUserId = 1, Name = "Sıcak İçecek" }
                    );
                });

            modelBuilder.Entity("Automat.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<DateTime>("InsertDate");

                    b.Property<int?>("InsertUserId");

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.Property<double>("Price");

                    b.Property<int>("ProductCode");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = 1, CategoryId = 1, InsertDate = new DateTime(2021, 1, 17, 14, 20, 37, 696, DateTimeKind.Local), InsertUserId = 1, Name = "Su", Price = 1.0, ProductCode = 100, Quantity = 10 },
                        new { Id = 2, CategoryId = 1, InsertDate = new DateTime(2021, 1, 17, 14, 20, 37, 696, DateTimeKind.Local), InsertUserId = 1, Name = "Meyve Suyu", Price = 2.0, ProductCode = 200, Quantity = 10 },
                        new { Id = 3, CategoryId = 1, InsertDate = new DateTime(2021, 1, 17, 14, 20, 37, 696, DateTimeKind.Local), InsertUserId = 1, Name = "Cola", Price = 3.0, ProductCode = 300, Quantity = 10 },
                        new { Id = 4, CategoryId = 3, InsertDate = new DateTime(2021, 1, 17, 14, 20, 37, 696, DateTimeKind.Local), InsertUserId = 1, Name = "Çay", Price = 4.0, ProductCode = 400, Quantity = 20 },
                        new { Id = 5, CategoryId = 3, InsertDate = new DateTime(2021, 1, 17, 14, 20, 37, 696, DateTimeKind.Local), InsertUserId = 1, Name = "Kahve", Price = 5.0, ProductCode = 500, Quantity = 20 },
                        new { Id = 6, CategoryId = 2, InsertDate = new DateTime(2021, 1, 17, 14, 20, 37, 696, DateTimeKind.Local), InsertUserId = 1, Name = "Et", Price = 20.0, ProductCode = 1000, Quantity = 5 },
                        new { Id = 7, CategoryId = 2, InsertDate = new DateTime(2021, 1, 17, 14, 20, 37, 696, DateTimeKind.Local), InsertUserId = 1, Name = "Balık", Price = 15.0, ProductCode = 2000, Quantity = 5 },
                        new { Id = 8, CategoryId = 2, InsertDate = new DateTime(2021, 1, 17, 14, 20, 37, 696, DateTimeKind.Local), InsertUserId = 1, Name = "Sandviç", Price = 10.0, ProductCode = 3000, Quantity = 5 }
                    );
                });

            modelBuilder.Entity("Automat.Domain.Product", b =>
                {
                    b.HasOne("Automat.Domain.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
